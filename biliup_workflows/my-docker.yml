# name: myDocker

# on:
#   workflow_dispatch:
#   # Publish `master` as Docker `latest` image.
#   push:
#     branches:
#       - master
#     # Publish `v1.2.3` tags as releases.
#     tags:
#       - v*
#   pull_request:

# env:
#   IMAGE_NAME: biliup

# jobs:
#   # Run tests.
#   # See also https://docs.docker.com/docker-hub/builds/automated-testing/
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Run tests
#         run: |
#           if [ -f docker-compose.test.yml ]; then
#             docker-compose --file docker-compose.test.yml build
#             docker-compose --file docker-compose.test.yml run sut
#           else
#             docker build . --file Dockerfile
#           fi
#   # Push image to GitHub Packages.
#   # See also https://docs.docker.com/docker-hub/builds/
#   push:
#     # Ensure test job passes before pushing image.
#     needs: test

#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Build image
#         run: docker build . --file Dockerfile --tag $IMAGE_NAME

#       - name: Log in to Ghcr Docker Hub
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Push image
#         run: |
#           IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
#           # Change all uppercase to lowercase
#           IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#           # Strip git ref prefix from version
#           VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#           # Strip "v" prefix from tag name, eg: tag v1.0.0
#           [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#           # Use Docker `latest` tag convention
#           [ "$VERSION" == "master" ] && VERSION=latest
#           echo IMAGE_ID=$IMAGE_ID
#           echo VERSION=$VERSION
#           docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#           docker push $IMAGE_ID:$VERSION
#           docker tag $IMAGE_ID:$VERSION ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$VERSION
#           docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$VERSION




# https://github.com/docker/build-push-action
name: myDocker

on:
  workflow_dispatch:
  # Publish `master` as Docker `latest` image.
  push:
    # branches:
    #   - master
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # pull_request:
  #   branches:
  #     - master

env:
  IMAGE: fairyworld/biliup
  IMAGE2: ghcr.io/fairyworld/bili_biliup/biliup

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE2 }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Ghcr Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE }}:latest, ${{ env.IMAGE2 }}:latest, ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

